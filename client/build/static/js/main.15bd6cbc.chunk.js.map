{"version":3,"sources":["utils/auth.js","utils/localStorage.js","utils/mutations.js","pages/SearchGames.js","utils/API.js","utils/queries.js","pages/SavedGames.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","removeGameId","gameId","savedGameIds","JSON","parse","updatedSavedGameIds","filter","savedGameId","stringify","LOGIN_USER","gql","ADD_USER","SAVE_GAME","REMOVE_GAME","SearchGames","useState","searchedGames","setSearchedGames","searchInput","setSearchInput","useMutation","saveGame","error","setSavedGameIds","useEffect","gameIdArr","length","handleFormSubmit","event","a","preventDefault","fetch","response","ok","Error","json","items","gameData","map","game","id","genres","volumeInfo","title","description","image","imageLinks","thumbnail","console","handleSaveGame","gameToSave","find","Auth","loggedIn","variables","body","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","value","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","border","Img","src","alt","Body","Title","Text","disabled","some","onClick","GET_ME","SavedGames","useQuery","loading","data","removeGame","userData","me","handleDeleteGame","Object","keys","savedGames","SignupForm","username","email","password","userFormData","setUserFormData","addUser","validated","showAlert","setShowAlert","handleInputChange","currentTarget","checkValidity","stopPropagation","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","loginUser","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","ApolloProvider","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"4WAsCe,M,0FAnCb,WACE,OAAOA,IAAOC,KAAKC,c,sBAGrB,WACE,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,K,4BAGzC,SAAeA,GACb,IAEE,OADgBH,IAAOG,GACXE,IAAMC,KAAKC,MAAQ,IAG/B,MAAOC,GACP,OAAO,K,sBAIX,WACE,OAAOC,aAAaC,QAAQ,c,mBAG9B,SAAMC,GACJF,aAAaG,QAAQ,WAAYD,GACjCE,OAAOC,SAASC,OAAO,O,oBAGzB,WACEN,aAAaO,WAAW,YACxBH,OAAOC,SAASC,OAAO,S,MClBZE,EAAe,SAACC,GAC3B,IAAMC,EAAeV,aAAaC,QAAQ,eACtCU,KAAKC,MAAMZ,aAAaC,QAAQ,gBAChC,KAEJ,IAAKS,EACH,OAAO,EAGT,IAAMG,EAAmB,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAcI,QAAO,SAACC,GAAD,OAAiBA,IAAgBN,KAGlF,OAFAT,aAAaG,QAAQ,cAAeQ,KAAKK,UAAUH,KAE5C,G,yBC1BEI,EAAaC,YAAH,qNAYVC,EAAWD,YAAH,kQAYRE,EAAYF,YAAH,0SAmBTG,EAAcH,YAAH,6S,OCqFTI,EAzHK,WAClB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8BC,YAAYR,GAA1C,mBAAOS,EAAP,KACA,GADA,KAAmBC,MACqBP,mBFZjBvB,aAAaC,QAAQ,eACtCU,KAAKC,MAAMZ,aAAaC,QAAQ,gBAChC,KEUN,mBAAOS,EAAP,KAAqBqB,EAArB,KAEAC,qBAAU,WACR,OAAO,WFRkB,IAACC,KEQDvB,GFPXwB,OACZlC,aAAaG,QAAQ,cAAeQ,KAAKK,UAAUiB,IAEnDjC,aAAaO,WAAW,mBEO5B,IAAM4B,EAAgB,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,yDACvBD,EAAME,iBAEDZ,EAHkB,0CAId,GAJc,gCChBhBa,MAAM,iDAAD,ODwByBb,IARd,WAQfc,EARe,QAUPC,GAVO,sBAWb,IAAIC,MAAM,0BAXG,wBAcGF,EAASG,OAdZ,iBAcbC,EAda,EAcbA,MAEFC,EAAWD,EAAME,KAAI,SAACC,GAAD,YAAW,CACpCtC,OAAQsC,EAAKC,GACbC,OAAQF,EAAKG,WAAWD,QAAU,CAAC,mBACnCE,MAAOJ,EAAKG,WAAWC,MACvBC,YAAaL,EAAKG,WAAWE,YAC7BC,OAAO,UAAAN,EAAKG,WAAWI,kBAAhB,eAA4BC,YAAa,OAGlD9B,EAAiBoB,GACjBlB,EAAe,IAzBM,kDA2BrB6B,QAAQ1B,MAAR,MA3BqB,0DAAH,sDA+BhB2B,EAAc,uCAAG,WAAOhD,GAAP,eAAA4B,EAAA,yDACfqB,EAAalC,EAAcmC,MAAK,SAACZ,GAAD,OAAUA,EAAKtC,SAAWA,KAClDmD,EAAKC,WAAaD,EAAKnE,WAAa,KAF7B,0CAKZ,GALY,gCASboC,EAAS,CACbiC,UAAW,CAAEC,KAAML,KAVF,OAanB3B,EAAgB,GAAD,mBAAKrB,GAAL,CAAmBgD,EAAWjD,UAb1B,kDAenB+C,QAAQ1B,MAAR,MAfmB,0DAAH,sDAmBpB,OACE,qCACE,cAACkC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,qBAA3B,SACE,eAACC,EAAA,EAAD,WACE,gDAEA,cAACC,EAAA,EAAD,CAAMC,SAAUlC,EAAhB,SACE,eAACiC,EAAA,EAAKE,IAAN,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,cAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,cAAcC,MAAOlD,EAAamD,SAAU,SAACC,GAAD,OAAOnD,EAAemD,EAAEC,OAAOH,QAAQI,KAAK,OAAOC,KAAK,KAAKC,YAAY,wBAG1I,cAACX,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,cAACU,EAAA,EAAD,CAAQH,KAAK,SAASI,QAAQ,UAAUH,KAAK,KAA7C,gCAUV,eAACd,EAAA,EAAD,WACE,6BACG3C,EAAcU,OAAd,kBACcV,EAAcU,OAD5B,aAEG,+BAEN,cAACmD,EAAA,EAAD,UACG7D,EAAcsB,KAAI,SAACC,GAClB,OACE,eAACuC,EAAA,EAAD,CAAwBC,OAAO,OAA/B,UACGxC,EAAKM,MACJ,cAACiC,EAAA,EAAKE,IAAN,CACEC,IAAK1C,EAAKM,MACVqC,IAAG,wBAAmB3C,EAAKI,OAC3BiC,QAAQ,QAER,KACJ,eAACE,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UAAa7C,EAAKI,QAClB,oBAAGe,UAAU,QAAb,oBAA6BnB,EAAKE,UAClC,cAACqC,EAAA,EAAKO,KAAN,UAAY9C,EAAKK,cAChBQ,EAAKC,YACJ,cAACsB,EAAA,EAAD,CAAQW,SAAQ,OAAEpF,QAAF,IAAEA,OAAF,EAAEA,EAAcqF,MAAK,SAAChF,GAAD,OAAiBA,IAAgBgC,EAAKtC,UAASyD,UAAU,qBAAqB8B,QAAS,kBAAMvC,EAAeV,EAAKtC,SAAtJ,UACe,OAAZC,QAAY,IAAZA,OAAA,EAAAA,EAAcqF,MAAK,SAAChF,GAAD,OAAiBA,IAAgBgC,EAAKtC,WACtD,mCACA,6BAhBDsC,EAAKtC,oB,SEnGjBwF,EAAS/E,YAAH,6NC4EJgF,EApEI,WACjB,MAA0BC,YAASF,GAA3BG,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KACjB,EAAgCzE,YAAYP,GAA5C,mBAAOiF,EAAP,KACMC,GADN,KAAqBzE,OACA,OAAJuE,QAAI,IAAJA,OAAA,EAAAA,EAAMG,KAAM,IAGvBC,GAFiBC,OAAOC,KAAKJ,GAAUrE,OAEvB,uCAAG,WAAOzB,GAAP,SAAA4B,EAAA,yDACTuB,EAAKC,WAAaD,EAAKnE,WAAa,KAD3B,0CAId,GAJc,gCAQf6G,EAAW,CAAExC,UAAW,CAAErD,OAAQA,KARnB,OASrBD,EAAaC,GATQ,gDAWrB+C,QAAQ1B,MAAR,MAXqB,yDAAH,uDAetB,OAAIsE,EACK,4CAIP,qCACE,cAACpC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,qBAA3B,SACE,cAACC,EAAA,EAAD,UACE,kDAGJ,eAACA,EAAA,EAAD,WACE,6BACGoC,EAASK,WAAW1E,OAApB,kBACcqE,EAASK,WAAW1E,OADlC,kBAEoC,IAA/BqE,EAASK,WAAW1E,OAAe,OAAS,QAFjD,KAIG,qCAEN,cAACmD,EAAA,EAAD,UACGkB,EAASK,WAAW9D,KAAI,SAACC,GACxB,OACE,eAACuC,EAAA,EAAD,CAAwBC,OAAO,OAA/B,UACGxC,EAAKM,MACJ,cAACiC,EAAA,EAAKE,IAAN,CACEC,IAAK1C,EAAKM,MACVqC,IAAG,wBAAmB3C,EAAKI,OAC3BiC,QAAQ,QAER,KACJ,eAACE,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UAAa7C,EAAKI,QAClB,oBAAGe,UAAU,QAAb,oBAA6BnB,EAAKE,UAClC,cAACqC,EAAA,EAAKO,KAAN,UAAY9C,EAAKK,cACjB,cAAC+B,EAAA,EAAD,CAAQjB,UAAU,uBAAuB8B,QAAS,kBAAMS,EAAiB1D,EAAKtC,SAA9E,8BAZOsC,EAAKtC,oB,6DCoCfoG,EAjFI,WACjB,MAAwCtF,mBAAS,CAAEuF,SAAU,GAAIC,MAAO,GAAIC,SAAU,KAAtF,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA6BtF,YAAYT,GAAzC,mBAAOgG,EAAP,KACA,GADA,KAAkBrF,MACEP,oBAAS,IAAtB6F,EAAP,oBACA,EAAkC7F,oBAAS,GAA3C,mBAAO8F,EAAP,KAAkBC,EAAlB,KAEMC,EAAoB,SAACnF,GACzB,MAAwBA,EAAM2C,OAAtBJ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdsC,EAAgB,2BAAKD,GAAN,kBAAqBtC,EAAOC,MAGvCzC,EAAgB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACvBD,EAAME,kBAGuB,IADhBF,EAAMoF,cACVC,kBACPrF,EAAME,iBACNF,EAAMsF,mBANe,kBAUEP,EAAQ,CAC7BrD,UAAU,eAAMmD,KAXG,gBAUbZ,EAVa,EAUbA,KAIRzC,EAAK+D,MAAMtB,EAAKc,QAAQzH,OAdH,kDAgBrB8D,QAAQ1B,MAAR,MACAwF,GAAa,GAjBQ,QAoBvBJ,EAAgB,CACdJ,SAAU,GACVC,MAAO,GACPC,SAAU,KAvBW,0DAAH,sDA2BtB,OACE,mCACE,eAAC5C,EAAA,EAAD,CAAMwD,YAAU,EAACR,UAAWA,EAAW/C,SAAUlC,EAAjD,UACE,cAAC0F,EAAA,EAAD,CAAOC,aAAW,EAACC,QAAS,kBAAMT,GAAa,IAAQU,KAAMX,EAAUjC,QAAQ,SAA/E,0CAIA,eAAChB,EAAA,EAAK6D,MAAN,WACE,cAAC7D,EAAA,EAAK8D,MAAN,CAAYC,QAAQ,WAApB,sBAGA,cAAC/D,EAAA,EAAKM,QAAN,CAAcM,KAAK,OAAOE,YAAY,gBAAgBP,KAAK,WAAWE,SAAU0C,EAAmB3C,MAAOqC,EAAaH,SAAUsB,UAAQ,IACzI,cAAChE,EAAA,EAAKM,QAAQ2D,SAAd,CAAuBrD,KAAK,UAA5B,0CAKF,eAACZ,EAAA,EAAK6D,MAAN,WACE,cAAC7D,EAAA,EAAK8D,MAAN,CAAYC,QAAQ,QAApB,mBACA,cAAC/D,EAAA,EAAKM,QAAN,CAAcM,KAAK,QAAQE,YAAY,qBAAqBP,KAAK,QAAQE,SAAU0C,EAAmB3C,MAAOqC,EAAaF,MAAOqB,UAAQ,IACzI,cAAChE,EAAA,EAAKM,QAAQ2D,SAAd,CAAuBrD,KAAK,UAA5B,wCAKF,eAACZ,EAAA,EAAK6D,MAAN,WACE,cAAC7D,EAAA,EAAK8D,MAAN,CAAYC,QAAQ,WAApB,sBAGA,cAAC/D,EAAA,EAAKM,QAAN,CAAcM,KAAK,WAAWE,YAAY,gBAAgBP,KAAK,WAAWE,SAAU0C,EAAmB3C,MAAOqC,EAAaD,SAAUoB,UAAQ,IAC7I,cAAChE,EAAA,EAAKM,QAAQ2D,SAAd,CAAuBrD,KAAK,UAA5B,2CAKF,cAACG,EAAA,EAAD,CAAQW,WAAamB,EAAaH,UAAYG,EAAaF,OAASE,EAAaD,UAAYhC,KAAK,SAASI,QAAQ,UAAnH,0BCAOkD,GAzEG,WAChB,MAAwC/G,mBAAS,CAAEwF,MAAO,GAAIC,SAAU,KAAxE,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoB3F,oBAAS,GAAtB6F,EAAP,oBACA,EAAkC7F,oBAAS,GAA3C,mBAAO8F,EAAP,KAAkBC,EAAlB,KACA,EAAoB1F,YAAYX,GAAzBsH,EAAP,oBAEMhB,EAAoB,SAACnF,GACzB,MAAwBA,EAAM2C,OAAtBJ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdsC,EAAgB,2BAAKD,GAAN,kBAAqBtC,EAAOC,MAGvCzC,EAAgB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACvBD,EAAME,kBAGuB,IADhBF,EAAMoF,cACVC,kBACPrF,EAAME,iBACNF,EAAMsF,mBANe,kBAUEa,EAAU,CAC/BzE,UAAU,eAAMmD,KAXG,gBAUbZ,EAVa,EAUbA,KAIRzC,EAAK+D,MAAMtB,EAAKsB,MAAMjI,OAdD,kDAgBrB8D,QAAQ1B,MAAR,MACAwF,GAAa,GAjBQ,QAoBvBJ,EAAgB,CACdJ,SAAU,GACVC,MAAO,GACPC,SAAU,KAvBW,0DAAH,sDA2BtB,OACE,mCACE,eAAC5C,EAAA,EAAD,CAAMwD,YAAU,EAACR,UAAWA,EAAW/C,SAAUlC,EAAjD,UACE,cAAC0F,EAAA,EAAD,CAAOC,aAAW,EAACC,QAAS,kBAAMT,GAAa,IAAQU,KAAMX,EAAWjC,QAAQ,SAAhF,wCAIA,eAAChB,EAAA,EAAK6D,MAAN,WACE,cAAC7D,EAAA,EAAK8D,MAAN,CAAYC,QAAQ,QAApB,mBAGA,cAAC/D,EAAA,EAAKM,QAAN,CAAcM,KAAK,OAAOE,YAAY,aAAaP,KAAK,QAAQE,SAAU0C,EAAmB3C,MAAOqC,EAAaF,MAAOqB,UAAQ,IAChI,cAAChE,EAAA,EAAKM,QAAQ2D,SAAd,CAAuBrD,KAAK,UAA5B,kDAKF,eAACZ,EAAA,EAAK6D,MAAN,WACE,cAAC7D,EAAA,EAAK8D,MAAN,CAAYC,QAAQ,WAApB,sBAGA,cAAC/D,EAAA,EAAKM,QAAN,CAAcM,KAAK,WAAWE,YAAY,gBAAgBP,KAAK,WAAWE,SAAU0C,EAAmB3C,MAAOqC,EAAaD,SAAUoB,UAAQ,IAC7I,cAAChE,EAAA,EAAKM,QAAQ2D,SAAd,CAAuBrD,KAAK,UAA5B,6CAKF,cAACG,EAAA,EAAD,CAAQW,WAAYmB,EAAaF,OAASE,EAAaD,UAAWhC,KAAK,SAASI,QAAQ,UAAxF,0BCKOoD,GArEG,WAEhB,MAAkCjH,oBAAS,GAA3C,mBAAOkH,EAAP,KAAkBC,EAAlB,KAEA,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOxD,QAAQ,OAAOyD,OAAO,KAAxC,SACE,eAAC1E,EAAA,EAAD,CAAWF,OAAK,EAAhB,UACE,cAAC0E,EAAA,EAAOG,MAAR,CAAcC,GAAIC,IAAMC,GAAG,IAA3B,sBAGA,cAACN,EAAA,EAAOO,OAAR,CAAe,gBAAc,WAC7B,cAACP,EAAA,EAAOQ,SAAR,CAAiBnG,GAAG,SAApB,SACE,eAACoG,EAAA,EAAD,CAAKlF,UAAU,UAAf,UACE,cAACkF,EAAA,EAAIJ,KAAL,CAAUD,GAAIC,IAAMC,GAAG,IAAvB,oBAGCrF,EAAKC,WACJ,qCACE,cAACuF,EAAA,EAAIJ,KAAL,CAAUD,GAAIC,IAAMC,GAAG,SAAvB,qBAGA,cAACG,EAAA,EAAIJ,KAAL,CAAUhD,QAASpC,EAAKyF,OAAxB,uBAKF,cAACD,EAAA,EAAIJ,KAAL,CAAUhD,QAAS,kBAAM0C,GAAa,IAAtC,qCAQV,cAACY,EAAA,EAAD,CAAOrE,KAAK,KAAK+C,KAAMS,EAAWc,OAAQ,kBAAMb,GAAa,IAAQ,kBAAgB,eAArF,SACE,eAACc,EAAA,EAAIrF,UAAL,CAAesF,iBAAiB,QAAhC,UACE,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAM1D,MAAP,CAAa5C,GAAG,eAAhB,SACE,eAACoG,EAAA,EAAD,CAAKhE,QAAQ,QAAb,UACE,cAACgE,EAAA,EAAIQ,KAAL,UACE,cAACR,EAAA,EAAIJ,KAAL,CAAUa,SAAS,QAAnB,qBAIF,cAACT,EAAA,EAAIQ,KAAL,UACE,cAACR,EAAA,EAAIJ,KAAL,CAAUa,SAAS,SAAnB,8BAOR,cAACP,EAAA,EAAM3D,KAAP,UACE,eAAC6D,EAAA,EAAIM,QAAL,WACE,cAACN,EAAA,EAAIO,KAAL,CAAUF,SAAS,QAAnB,SACE,cAAC,GAAD,CAAWG,iBAAkB,kBAAMtB,GAAa,QAElD,cAACc,EAAA,EAAIO,KAAL,CAAUF,SAAS,SAAnB,SACE,cAAC,EAAD,CAAYG,iBAAkB,kBAAMtB,GAAa,sBC3D3DuB,GAAS,IAAIC,IAAa,CAC9BC,QAAS,SAACC,GACR,IAAM1K,EAAQM,aAAaC,QAAQ,YAEnCmK,EAAUC,WAAW,CACnBC,QAAS,CACPC,cAAe7K,EAAK,iBAAaA,GAAU,OAIjD8K,IAAK,aAoBQC,OAjBf,WACE,OACE,cAACC,EAAA,EAAD,CAAgBT,OAAQA,GAAxB,SACE,cAAC,IAAD,UACE,qCACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAWvJ,IACjC,cAAC,IAAD,CAAOqJ,OAAK,EAACC,KAAK,SAASC,UAAW3E,IACtC,cAAC,IAAD,CAAO4E,OAAQ,kBAAM,oBAAI5G,UAAU,YAAd,6CCzBjC6G,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.15bd6cbc.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","export const getSavedGameIds = () => {\n    const savedGameIds = localStorage.getItem('saved_games')\n      ? JSON.parse(localStorage.getItem('saved_games'))\n      : [];\n  \n    return savedGameIds;\n  };\n  \n  export const saveGameIds = (gameIdArr) => {\n    if (gameIdArr.length) {\n      localStorage.setItem('saved_games', JSON.stringify(gameIdArr));\n    } else {\n      localStorage.removeItem('saved_games');\n    }\n  };\n  \n  export const removeGameId = (gameId) => {\n    const savedGameIds = localStorage.getItem('saved_games')\n      ? JSON.parse(localStorage.getItem('saved_games'))\n      : null;\n  \n    if (!savedGameIds) {\n      return false;\n    }\n  \n    const updatedSavedGameIds = savedGameIds?.filter((savedGameId) => savedGameId !== gameId);\n    localStorage.setItem('saved_games', JSON.stringify(updatedSavedGameIds));\n  \n    return true;\n  };","import gql from \"graphql-tag\";\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const SAVE_GAME = gql`\n  mutation saveGame($body: saveGameInput!) {\n    saveGame(body: $body) {\n      _id\n      username\n      email\n      gameCount\n      savedGames {\n        title\n        genres\n        description\n        image\n        link\n        gameId\n      }\n    }\n  }\n`;\n\nexport const REMOVE_GAME = gql`\n  mutation removeGame($gameId: String!) {\n    removeGame(gameId: $gameId) {\n      _id\n      username\n      email\n      gameCount\n      savedGames {\n        title\n        genres\n        description\n        image\n        link\n        gameId\n      }\n    }\n  }\n`;","import React, { useState, useEffect } from \"react\";\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from \"react-bootstrap\";\n\nimport Auth from \"../utils/auth\";\nimport { saveGame, searchGames } from \"../utils/API\";\nimport { saveGameIds, getSavedGameIds } from \"../utils/localStorage\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { SAVE_GAME } from \"../utils/mutations\";\n\nconst SearchGames = () => {\n  const [searchedGames, setSearchedGames] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [saveGame, { error }] = useMutation(SAVE_GAME);\n  const [savedGameIds, setSavedGameIds] = useState(getSavedGameIds());\n\n  useEffect(() => {\n    return () => saveGameIds(savedGameIds);\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGames(searchInput);\n\n      if (!response.ok) {\n        throw new Error(\"Woops, something broke\");\n      }\n\n      const { items } = await response.json();\n\n      const gameData = items.map((game) => ({\n        gameId: game.id,\n        genres: game.volumeInfo.genres || [\"No Genre Linked\"],\n        title: game.volumeInfo.title,\n        description: game.volumeInfo.description,\n        image: game.volumeInfo.imageLinks?.thumbnail || \"\",\n      }));\n\n      setSearchedGames(gameData);\n      setSearchInput(\"\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSaveGame = async (gameId) => {\n    const gameToSave = searchedGames.find((game) => game.gameId === gameId);\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await saveGame({\n        variables: { body: gameToSave },\n      });\n\n      setSavedGameIds([...savedGameIds, gameToSave.gameId]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Find Your Game</h1>\n\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control name=\"searchInput\" value={searchInput} onChange={(e) => setSearchInput(e.target.value)} type=\"text\" size=\"lg\" placeholder=\"Search Game Title\"/>\n              </Col>\n\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedGames.length\n            ? `Viewing ${searchedGames.length} results:`\n            : \"Search for a game to begin\"}\n        </h2>\n        <CardColumns>\n          {searchedGames.map((game) => {\n            return (\n              <Card key={game.gameId} border=\"dark\">\n                {game.image ? (\n                  <Card.Img\n                    src={game.image}\n                    alt={`The cover for ${game.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{game.title}</Card.Title>\n                  <p className=\"small\">Genre: {game.genres}</p>\n                  <Card.Text>{game.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button disabled={savedGameIds?.some((savedGameId) => savedGameId === game.gameId)} className=\"btn-block btn-info\" onClick={() => handleSaveGame(game.gameId)}>\n                      {savedGameIds?.some((savedGameId) => savedGameId === game.gameId)\n                        ? \"This game has already been added\"\n                        : \"Add Game to Library\"}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchGames;","// make a search to google books api\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\nexport const searchGames = (query) => {\n    return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n};\n","import gql from \"graphql-tag\";\n\nexport const GET_ME = gql`\n  {\n    me {\n      _id\n      email\n      username\n      savedGames {\n        title\n        genres\n        description\n        image\n        link\n        gameId\n      }\n    }\n  }\n`;","import React, { useState, useEffect } from \"react\";\nimport { Jumbotron, Container, Card, CardColumns, Button } from \"react-bootstrap\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nimport Auth from \"../utils/auth\";\nimport { GET_ME } from \"../utils/queries\";\nimport { REMOVE_GAME } from \"../utils/mutations\";\nimport { getMe, deleteGame } from \"../utils/API\";\nimport { removeGameId } from \"../utils/localStorage\";\n\nconst SavedGames = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const [removeGame, { error }] = useMutation(REMOVE_GAME);\n  const userData = data?.me || {};\n  const userDataLength = Object.keys(userData).length;\n\n  const handleDeleteGame = async (gameId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await removeGame({ variables: { gameId: gameId } });\n      removeGameId(gameId);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Game Library</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedGames.length\n            ? `Viewing ${userData.savedGames.length} saved ${\n                userData.savedGames.length === 1 ? \"game\" : \"games\"\n              }:`\n            : \"Looks like your library is empty\"}\n        </h2>\n        <CardColumns>\n          {userData.savedGames.map((game) => {\n            return (\n              <Card key={game.gameId} border=\"dark\">\n                {game.image ? (\n                  <Card.Img\n                    src={game.image}\n                    alt={`The cover for ${game.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{game.title}</Card.Title>\n                  <p className=\"small\">Genre: {game.genres}</p>\n                  <Card.Text>{game.description}</Card.Text>\n                  <Button className=\"btn-block btn-danger\" onClick={() => handleDeleteGame(game.gameId)}>\n                    Delete Game\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedGames;","import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n  const [userFormData, setUserFormData] = useState({ username: \"\", email: \"\", password: \"\" });\n  const [addUser, { error }] = useMutation(ADD_USER);\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert}variant=\"danger\">\n          Unable to Sign Up, Try Again\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">\n            Username\n          </Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Your username\" name=\"username\" onChange={handleInputChange} value={userFormData.username} required/>\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide a username\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Your email address\" name=\"email\" onChange={handleInputChange} value={userFormData.email} required/>\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide an email\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">\n            Password\n          </Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Your password\" name=\"password\" onChange={handleInputChange} value={userFormData.password} required/>\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide an password\n          </Form.Control.Feedback>\n        </Form.Group>\n        \n        <Button disabled={!( userFormData.username && userFormData.email && userFormData.password )} type=\"submit\" variant=\"success\">\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;","// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [loginUser] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await loginUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant=\"danger\">\n          Unable to Login, Try Again\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">\n            Email\n          </Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Your email\" name=\"email\" onChange={handleInputChange} value={userFormData.email} required/>\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide your email address\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">\n            Password\n          </Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Your password\" name=\"password\" onChange={handleInputChange} value={userFormData.password} required/>\n          <Form.Control.Feedback type=\"invalid\">\n            Please provide your password\n          </Form.Control.Feedback>\n        </Form.Group>\n        \n        <Button disabled={!(userFormData.email && userFormData.password)} type=\"submit\" variant=\"success\">\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\n\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Gamology\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/'>\n                Search\n              </Nav.Link>\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    Library\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>\n                    Logout\n                  </Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>\n                  Login/Sign Up\n                </Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <Modal size='lg' show={showModal} onHide={() => setShowModal(false)} aria-labelledby='signup-modal'>\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>\n                    Login\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>\n                    Sign Up\n                  </Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;","import React from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport SearchGames from \"./pages/SearchGames\";\nimport SavedGames from \"./pages/SavedGames\";\nimport Navbar from \"./components/Navbar\";\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem(\"id_token\");\n\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    });\n  },\n  uri: \"/graphql\",\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={SearchGames} />\n            <Route exact path=\"/saved\" component={SavedGames} />\n            <Route render={() => <h1 className=\"display-2\">Woops, Wrong Page</h1>} />\n          </Switch>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}